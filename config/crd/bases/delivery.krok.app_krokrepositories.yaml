---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: krokrepositories.delivery.krok.app
spec:
  group: delivery.krok.app
  names:
    kind: KrokRepository
    listKind: KrokRepositoryList
    plural: krokrepositories
    singular: krokrepository
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KrokRepository is the Schema for the krokrepositories API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KrokRepositorySpec defines the desired state of KrokRepository
            properties:
              authSecretRef:
                description: AuthSecretRef contains the ref to the secret containing
                  authentication data for this repository.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              commands:
                description: Commands contains all the commands which this repository
                  is attached to.
                items:
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
              events:
                description: Events contains all events that this repository subscribes
                  to.
                items:
                  type: string
                type: array
              gitLab:
                description: GitLab specific settings.
                properties:
                  projectID:
                    description: ProjectID is an optional ID which defines a project
                      in Gitlab.
                    type: integer
                type: object
              platform:
                description: 'Platform defines on which platform this repository is
                  in. Exp.: GitHub, GitLab, Gitea...'
                type: string
              providerTokenSecretRef:
                description: ProviderTokenSecretRef contains the ref to the secret
                  containing authentication data for the provider of this repository.
                  For example, GitHub token, or a Gitlab token...
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
              url:
                description: URL of the repository.
                type: string
            required:
            - authSecretRef
            - platform
            - providerTokenSecretRef
            - url
            type: object
          status:
            description: KrokRepositoryStatus defines the observed state of KrokRepository
            properties:
              events:
                description: Events contains run outputs for command runs that have
                  been executed for this Repository. This holds the last 10 outcomes.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  items:
                    items:
                      description: KrokEvent is the Schema for the krokevents API
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        metadata:
                          type: object
                        spec:
                          description: KrokEventSpec defines the desired state of
                            KrokEvent
                          properties:
                            CommandsToRun:
                              description: CommandsToRun contains a list of commands
                                that this event needs to execute.
                              items:
                                description: KrokCommand is the Schema for the krokcommands
                                  API
                                properties:
                                  apiVersion:
                                    description: 'APIVersion defines the versioned
                                      schema of this representation of an object.
                                      Servers should convert recognized schemas to
                                      the latest internal value, and may reject unrecognized
                                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  kind:
                                    description: 'Kind is a string value representing
                                      the REST resource this object represents. Servers
                                      may infer this from the endpoint the client
                                      submits requests to. Cannot be updated. In CamelCase.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  metadata:
                                    type: object
                                  spec:
                                    description: KrokCommandSpec defines the desired
                                      state of KrokCommand
                                    properties:
                                      commandHasOutputToWrite:
                                        description: CommandHasOutputToWrite if defined,
                                          it signals the underlying Job, to put its
                                          output into a generated and created secret.
                                        type: boolean
                                      dependencies:
                                        description: Dependencies defines a list of
                                          command names that this command depends
                                          on.
                                        items:
                                          type: string
                                        type: array
                                      enabled:
                                        description: Enabled defines if this command
                                          can be executed or not.
                                        type: boolean
                                      image:
                                        description: 'Image defines the image name
                                          and tag of the command example: krok-hook/slack-notification:v0.0.1'
                                        type: string
                                      platforms:
                                        description: Platforms holds all the platforms
                                          which this command supports.
                                        items:
                                          type: string
                                        type: array
                                      readInputFromSecrets:
                                        description: ReadInputFromSecret if defined,
                                          the command will take a list of key/value
                                          pairs in a secret and apply them as arguments
                                          to the command.
                                        items:
                                          description: Ref points to a secret which
                                            contains access information for the repository.
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          required:
                                          - name
                                          - namespace
                                          type: object
                                        type: array
                                      schedule:
                                        description: 'Schedule of the command. example:
                                          0 * * * * // follows cron job syntax.'
                                        type: string
                                    required:
                                    - image
                                    type: object
                                  status:
                                    description: KrokCommandStatus defines the observed
                                      state of KrokCommand
                                    type: object
                                type: object
                              type: array
                            payload:
                              description: Payload is the received event payload from
                                the provider.
                              type: string
                            type:
                              description: 'Type defines the event type such as: push,
                                pull, ping...'
                              type: string
                          required:
                          - CommandsToRun
                          - payload
                          - type
                          type: object
                        status:
                          description: KrokEventStatus defines the observed state
                            of KrokEvent
                          properties:
                            conditions:
                              items:
                                description: "Condition contains details for one aspect
                                  of the current state of this API Resource. --- This
                                  struct is intended for direct use as an array at
                                  the field path .status.conditions.  For example,
                                  \n type FooStatus struct{ // Represents the observations
                                  of a foo's current state. // Known .status.conditions.type
                                  are: \"Available\", \"Progressing\", and \"Degraded\"
                                  // +patchMergeKey=type // +patchStrategy=merge //
                                  +listType=map // +listMapKey=type Conditions []metav1.Condition
                                  `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                                  patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                                  \n // other fields }"
                                properties:
                                  lastTransitionTime:
                                    description: lastTransitionTime is the last time
                                      the condition transitioned from one status to
                                      another. This should be when the underlying
                                      condition changed.  If that is not known, then
                                      using the time when the API field changed is
                                      acceptable.
                                    format: date-time
                                    type: string
                                  message:
                                    description: message is a human readable message
                                      indicating details about the transition. This
                                      may be an empty string.
                                    maxLength: 32768
                                    type: string
                                  observedGeneration:
                                    description: observedGeneration represents the
                                      .metadata.generation that the condition was
                                      set based upon. For instance, if .metadata.generation
                                      is currently 12, but the .status.conditions[x].observedGeneration
                                      is 9, the condition is out of date with respect
                                      to the current state of the instance.
                                    format: int64
                                    minimum: 0
                                    type: integer
                                  reason:
                                    description: reason contains a programmatic identifier
                                      indicating the reason for the condition's last
                                      transition. Producers of specific condition
                                      types may define expected values and meanings
                                      for this field, and whether the values are considered
                                      a guaranteed API. The value should be a CamelCase
                                      string. This field may not be empty.
                                    maxLength: 1024
                                    minLength: 1
                                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                    type: string
                                  status:
                                    description: status of the condition, one of True,
                                      False, Unknown.
                                    enum:
                                    - "True"
                                    - "False"
                                    - Unknown
                                    type: string
                                  type:
                                    description: type of condition in CamelCase or
                                      in foo.example.com/CamelCase. --- Many .condition.type
                                      values are consistent across resources like
                                      Available, but because arbitrary conditions
                                      can be useful (see .node.status.conditions),
                                      the ability to deconflict is important. The
                                      regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                    maxLength: 316
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                required:
                                - lastTransitionTime
                                - message
                                - reason
                                - status
                                - type
                                type: object
                              type: array
                            failedCommands:
                              description: FailedJobs contains command runs which
                                failed for a given event.
                              items:
                                description: Command contains details about the outcome
                                  of a job and the name.
                                properties:
                                  name:
                                    type: string
                                  outcome:
                                    type: string
                                required:
                                - name
                                - outcome
                                type: object
                              type: array
                            observedGeneration:
                              description: ObservedGeneration is the last reconciled
                                generation.
                              format: int64
                              type: integer
                            runningCommands:
                              additionalProperties:
                                type: boolean
                              description: RunningCommands contains commands which
                                are currently in-progress.
                              type: object
                            succeededCommands:
                              description: SucceededJobs contains command runs which
                                succeeded for a given event.
                              items:
                                description: Command contains details about the outcome
                                  of a job and the name.
                                properties:
                                  name:
                                    type: string
                                  outcome:
                                    type: string
                                required:
                                - name
                                - outcome
                                type: object
                              type: array
                          type: object
                      type: object
                    type: array
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    description: ListMeta describes metadata that synthetic resources
                      must have, including lists and various status objects. A resource
                      may have only one of {ObjectMeta, ListMeta}.
                    properties:
                      continue:
                        description: continue may be set if the user set a limit on
                          the number of items returned, and indicates that the server
                          has more data available. The value is opaque and may be
                          used to issue another request to the endpoint that served
                          this list to retrieve the next set of available objects.
                          Continuing a consistent list may not be possible if the
                          server configuration has changed or more than a few minutes
                          have passed. The resourceVersion field returned when using
                          this continue value will be identical to the value in the
                          first response, unless you have received this token from
                          an error message.
                        type: string
                      remainingItemCount:
                        description: remainingItemCount is the number of subsequent
                          items in the list which are not included in this list response.
                          If the list request contained label or field selectors,
                          then the number of remaining items is unknown and the field
                          will be left unset and omitted during serialization. If
                          the list is complete (either because it is not chunking
                          or because this is the last chunk), then there are no more
                          remaining items and this field will be left unset and omitted
                          during serialization. Servers older than v1.15 do not set
                          this field. The intended use of the remainingItemCount is
                          *estimating* the size of a collection. Clients should not
                          rely on the remainingItemCount to be set or to be exact.
                        format: int64
                        type: integer
                      resourceVersion:
                        description: 'String that identifies the server''s internal
                          version of this object that can be used by clients to determine
                          when objects have changed. Value must be treated as opaque
                          by clients and passed unmodified back to the server. Populated
                          by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      selfLink:
                        description: 'Deprecated: selfLink is a legacy read-only field
                          that is no longer populated by the system.'
                        type: string
                    type: object
                required:
                - items
                type: object
              uniqueURL:
                description: A Unique URL for this given repository. Generated upon
                  creation and saved in Status field.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
